// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String                   @id @default(cuid())
  firstname              String?
  lastname               String?
  username               String                   @unique
  email                  String                   @unique
  password               String
  environments           Environment[]
  EnvironmentEditors     EnvironmentEditors[]
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  invites                Int?                     @default(0)
  EnvironmentInvitations EnvironmentInvitations[]
}

model Environment {
  id                     String                   @id @default(cuid())
  name                   String
  language               String
  creator                User?                    @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  creatorId              String
  editors                EnvironmentEditors[]
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  last_opened            DateTime?
  code                   String?
  EnvironmentInvitations EnvironmentInvitations[]
}

model EnvironmentEditors {
  id            String      @id @default(cuid())
  editor        User        @relation(fields: [editorId], references: [id], onDelete: Cascade)
  editorId      String
  environment   Environment @relation(fields: [environmentId], references: [id], onDelete: Cascade)
  environmentId String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model EnvironmentInvitations {
  id            String      @id @default(cuid())
  environment   Environment @relation(fields: [environmentId], references: [id], onDelete: Cascade)
  environmentId String
  invitee       User        @relation(fields: [inviteeId], references: [id], onDelete: Cascade)
  inviteeId     String
  joined        Boolean     @default(false)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}
